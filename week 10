/// RegistrationPlate
public class RegistrationPlate {
    // ATTENTION: the object variable types are final, meaning that their value cannot be changed!
    private final String regCode;
    private final String country;
    public String GetRegCode()
    {
        return this.regCode;
    }
    public String GetCountry()
    {
        return this.country;
    }
    public RegistrationPlate(String regCode, String country) {
       this.regCode = regCode;
       this.country = country;
    }

    public String toString(){
        return country+ " " +regCode;
    }
    @Override
    public boolean equals(Object object)
    {
        if(object==null) return false;
        
        if(this.getClass()!=object.getClass()) return false;
        
        RegistrationPlate compared=(RegistrationPlate) object;
        
        if(this.regCode.equals(compared.GetRegCode()) && this.country.equals(compared.GetCountry()))
        return true;
        else return false;
    }
    
    public int hashCode()
    {
        if(this.country==null || this.regCode==null )return 1;
        
        int counter=0;
        for(int i=0;i<this.regCode.length();i++)
        {
            char c=this.regCode.charAt(i);
            if(c=='a' || (c=='b'))counter++;
        }
        int hashCode=this.country.length()*this.regCode.length()+counter;
        return hashCode;
    }
}
//VEHICLE REGISTER
import java.util.*;
public class VehicleRegister
{
    HashMap<RegistrationPlate,String> owners = new HashMap<RegistrationPlate,String>();
    
    public boolean add(RegistrationPlate plate, String owner)
    {
        if(owners.get(plate)==null)
        {
        this.owners.put(plate, owner);
        return true;
        }
        else return false;
    }
    
    public String get(RegistrationPlate plate)
    {
        return this.owners.get(plate);
    }
    public boolean delete(RegistrationPlate plate)
    {
        if(plate.hashCode()==1) return false;
        this.owners.remove(plate);
        return true ;
    }
    public void printRegistrationPlates()
    {
        for(RegistrationPlate plate:this.owners.keySet())
        System.out.println(plate);
        
    }
    public void printOwners()
    {
        for(String owner:this.owners.values())
        System.out.println(owner);
    }
}
///// 10: NATIONAL SERVICE:
//Civil service:
public class CivilService implements NationalService
{
    private int daysLeft;
    public CivilService()
    {
        this.daysLeft=362;
    }
    public int getDaysLeft()
    {
        return this.daysLeft;
    }
    public void work()
    {
        this.daysLeft--;
    }
}
///MilitaryService:
public class MilitaryService implements NationalService
{
  private int daysLeft;
  public MilitaryService (int days)
  {
    this.daysLeft = days;
  }
  public int getDaysLeft ()
  {
    return this.daysLeft;
  }
  public void work ()
  {
    this.daysLeft--;
    if (this.daysLeft < 0)
    {
     this.daysLeft++;
     System.out.println("Error, no days left");
    }
  }
}
///////////////7
//ToBeStored
//book.java:
public class Book implements ToBeStored
{
    private double weight;
    private String writer;
    private String name;
    
    public Book(String Writer, String Name,double Weight)
    {
        this.weight=Weight;
        this.writer=Writer;
        this.name=Name;
    }
    public double weight()
    {
        return this.weight;
    }
    public String toString()
    {
        return this.writer+": "+this.name;
    }
}
//CD.java:
public class CD implements ToBeStored
{
    public double weight()
    {
        return 0.1;
    }
    private String artist;
    private String title;
    private int publishingYear;
    
    public CD(String Artist, String Title, int Publishingyear)
    {
        this.artist=Artist;
        this.title =Title;
        this.publishingYear=Publishingyear;
    }
    @Override
    public String toString()
    {
        return artist +": "+title+", "+publishingYear;
    }
}
//Box.java
import java.util.*;
public class Box
{
 private double maxweight;
 private int maxcapacity;
 private ArrayList<ToBeStored> things=new ArrayList<ToBeStored>();
 public Box(double maxw)
 {
     this.maxweight=maxw;
 }
public void add(ToBeStored thing)
{
    if(this.totalweight()+thing.weight()<maxweight ) 
    things.add(thing);
}
 private double totalweight()
 {
     double total=0;
     for(ToBeStored thing:things)
     {
        total+=thing.weight();
     }
     return total;
 }
 public String toString()
 {
     return "Box: "+things.size()+" things, total weight: "+totalweight()+" kg";
 }
}
//OnlineShop

