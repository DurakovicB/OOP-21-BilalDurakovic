  //70 Combining ArrayLists
  	public static void combine(ArrayList<Integer> lista1, ArrayList<Integer> lista2)
	{
	    for(int number:lista2)lista1.add(number);
	    
	}
  //71 Smart combining
  	public static void combine(ArrayList<Integer> lista1, ArrayList<Integer> lista2)
	{
	    for(int number:lista2)if(!(lista1.contains(number)))lista1.add(number);
	}
  //72 Account
  	    //72.1
        Account newAcc = new Account("Bilal's acc",100);
        newAcc.deposit(20);
        System.out.println(newAcc);
        //72.2
        Account newAcc = new Account("Matt's account",1000);
        Account newAcc2= new Account("My account",0);
        newAcc.withdraw(100);
        newAcc2.deposit(100);
        System.out.println(newAcc);
        System.out.println(newAcc2);
        //73.3
        Account newAcc = new Account("A",100);
        Account newAcc2= new Account("B",0);
        Account newAcc3= new Account("C",0);
        transfer(newAcc,newAcc2,50);
        transfer(newAcc2,newAcc3,25);
   //73 Product
       	public static class Product{
	    private double price;
	    private int amount;
	    private String name;
	    
	    public Product(String nameAtStart,double PriceAtStart, int amountAtStart)
	    {
	        this.name=nameAtStart;
	        this.price=PriceAtStart;
	        this.amount=amountAtStart;
	    }
	    public void printProduct(){
	        System.out.println(this.name+", price "+this.price+" amount "+this.amount);
	    }
	}
	//74 Multiplier
	public class Multiplier
{
    private int Num;
    public static Multiplier(int number)
    {
        this.Num=number;
    }
    public int multiply(int nextnumber)
    {
        return nextnumber*this.Num;
    }
}
	//75 Decrease
	public void decrease() {
        this.value --;
    }
	//75.1,2
	   public void decrease() {
        if(this.value>0)this.value --;
    }
    	//75.3 
	public void reset()
    {
        this.value=0;
    }
    	//75.4 init value
	private int init;
	//constructor changes 
	public DecreasingCounter(int valueAtStart) {
        this.value = valueAtStart;
        this.init=valueAtStart;
    }
    	    public void setInitial();
	    {
	    this.value=this.init;
	    }
	 //76 Menu
	     public static class Menu{
        private ArrayList<String> meals;
        public  Menu(){
            this.meals=new ArrayList<String>();
        }
        
        public   void addMeal(String meal)
        {
            this.meals.add(meal);
        }
        
        public    void printMeals()
        {
            for(String meal:this.meals)System.out.println(meal);
        }
        public   void clearMenu()
        {
            this.meals= new ArrayList<String>();
        }
    }
    //77 Lyyra - card
    import java.util.*;


public class Main {
    public static void main(String[] args) {
       LyyraCard Pekka=new LyyraCard(20.0);
       LyyraCard Brian=new LyyraCard(30.0);

       Pekka.payGourmet();
       Brian.payEconomical();
       
       System.out.println(Pekka);
       System.out.println(Brian);
       
       Pekka.loadMoney(20);
       Brian.payGourmet();
              
       System.out.println(Pekka);
       System.out.println(Brian);
       
       Pekka.payEconomical();
       Pekka.payEconomical();
       Brian.loadMoney(50);
       
              
       System.out.println(Pekka);
       System.out.println(Brian);
       
       
    }

public static class LyyraCard{
    private double balance;
    public LyyraCard(double balanceAtStart){
        this.balance=balanceAtStart;
    }
    public String toString(){
        return ("The card has "+balance+" euros ");
    }
    public void payEconomical() {
        if(this.balance>=2.5)
        this.balance-=2.5;
    }
    public void payGourmet() {
        if(this.balance>4)
        this.balance-=4;
    }
    public void loadMoney(double Amount)
    {
        if(!(Amount<0))
        {
        this.balance+=Amount;
        if(this.balance>150)this.balance=150;
        }
    }
}
}

//78 Clock using a counter
    
	
